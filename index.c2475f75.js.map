{"mappings":"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","sources":["Documents/vscode/TargetMultipliers/src/index.ts"],"sourcesContent":["/// <reference path=\"chart.d.ts\" />\r\nmodule targetMultipliers {\r\n\r\n    const MaxTM = 57;\r\n    var tmDistribution = new Array<number>(MaxTM).fill(0);\r\n\r\n    interface Masternode {\r\n        \"ownerAuthAddress\": string,\r\n        \"operatorAuthAddress\": string,\r\n        \"rewardAddress\": string,\r\n        \"creationHeight\": number,\r\n        \"resignHeight\": number,\r\n        \"resignTx\": string,\r\n        \"banTx\": string,\r\n        \"state\": MasternodeState,\r\n        \"mintedBlocks\": number,\r\n        \"ownerIsMine\": boolean,\r\n        \"operatorIsMine\": boolean,\r\n        \"localMasternode\": boolean,\r\n        \"targetMultipliers\": number[],\r\n        \"timelock\": string\r\n    }\r\n\r\n    enum MasternodeState {\r\n        PRE_ENABLED = \"PRE_ENABLED\",\r\n        ENABLED = \"ENABLED\",\r\n        PRE_RESIGNED = \"PRE_RESIGNED\",\r\n        RESIGNED = \"RESIGNED\",\r\n        PRE_BANNED = \"PRE_BANNED\",\r\n        BANNED = \"BANNED\",\r\n        UNKNOWN = \"UNKNOWN\"\r\n    }\r\n\r\n    function setWithExpiry(key: string, value: string, ttl = 3600000) {\r\n        const item = {\r\n            value: value,\r\n            expiry: (new Date()).getTime() + ttl, //ttl in ms\r\n        }\r\n        localStorage.setItem(key, JSON.stringify(item))\r\n    }\r\n\r\n    function getWithExpiry(key: string) {\r\n        const itemStr = localStorage.getItem(key)\r\n        // if the item doesn't exist, return null\r\n        if (!itemStr) {\r\n            return null\r\n        }\r\n        const item = JSON.parse(itemStr)\r\n        const now = new Date()\r\n        // compare the expiry time of the item with the current time\r\n        try {\r\n            if (now.getTime() > item.expiry) {\r\n                // If the item is expired, delete the item from storage and return null\r\n                localStorage.removeItem(key)\r\n                return null\r\n            }\r\n        } catch (error) {\r\n            localStorage.removeItem(key)\r\n            return null\r\n        }\r\n        return item.value\r\n    }\r\n\r\n    function getTargetMultipliers() {\r\n        fetch('https://api.mydefichain.com/v1/listmasternodes/?state=Enabled')\r\n            .then(function (response) {\r\n                if (!response.ok) {\r\n                    console.error('HTTP error! status: ${response.status}');\r\n                }\r\n                return response.text();\r\n            })\r\n            .then(function (response) {\r\n                var masternodes = JSON.parse(response);\r\n                Object.entries<Masternode>(masternodes).forEach(\r\n                    ([key, value]) => {\r\n                        if (value.state == MasternodeState.ENABLED) {\r\n                            value.targetMultipliers.forEach(index => {\r\n                                index -= 1;\r\n                                if (index < 0)\r\n                                    index = 0;\r\n                                else if (index > MaxTM - 1)\r\n                                    index = MaxTM - 1;\r\n                                tmDistribution[index]++;\r\n                            });\r\n                        }\r\n                    });\r\n            }\r\n            );\r\n        setWithExpiry(\"tmDistribution\", JSON.stringify(tmDistribution));\r\n        setchart()\r\n    };\r\n\r\n    function setchart() {\r\n        const config = {\r\n            type: 'bar',\r\n            data: {\r\n                labels: Array.from({ length: MaxTM }, (_, i) => i + 1),\r\n                datasets: [\r\n                    {\r\n                        label: \"Distribution of the target multipliers\",\r\n                        backgroundColor: '#ff8000',\r\n                        data: tmDistribution\r\n                    }\r\n                ]\r\n            },\r\n        };\r\n\r\n        let e = document.getElementById('bar-chart');\r\n        //@ts-ignore\r\n        var myChart = new Chart(e, config);\r\n    }\r\n\r\n\r\n    window.onload = () => {\r\n        var s = getWithExpiry('tmDistribution');\r\n        if (s) {\r\n            tmDistribution = JSON.parse(s);\r\n            setchart();\r\n        } else {\r\n            getTargetMultipliers();\r\n        }\r\n    };\r\n\r\n}"],"names":[],"version":3,"file":"index.c2475f75.js.map","sourceRoot":"/__parcel_source_root/"}