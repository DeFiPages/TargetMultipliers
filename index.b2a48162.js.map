{"mappings":"AACA,IAAMA,+BAGN,IAAIC,EAAgB,IAAIC,MADP,IAC4BC,KAAK,YAiDzCC,IAELC,MAAM,8DACLC,MAAK,SAASC,GAIX,OAHKA,EAASC,IACVC,QAAQC,MAAM,0CAEXH,EAASI,UAEnBL,MAAK,SAASC,GACX,IAAIK,EAAYC,KAAKC,MAAMP,GAC1BQ,OAAOC,QAAqBJ,GAAaK,SAAO,EAC3CC,EAAKC,MACHA,EAAMnB,kBAAkBiB,SAAQG,KAC5BA,GAAQ,GACI,EACRA,EAAQ,EACHA,EAAQC,KACbD,EAAQC,IACZpB,EAAemB,oBAjDZF,EAAKC,EAAOG,EAAI,MACtC,MAAMC,EAAO,CACZJ,MAAOA,EACPK,QAAS,IAAIC,MAAQC,UAAYJ,GAElCK,aAAaC,QAAQV,EAAKL,KAAKgB,UAAUN,IAgDlCO,CAAc,iBAAiBjB,KAAKgB,UAAU5B,IAC9C8B,gBAKCA,IACL,MAAMC,EAAS,CACXC,KAAM,MACNC,KAAM,CACFC,OAAQjC,MAAMkC,KAAK,CAACC,OAnFf,KAmF6B,CAAGC,EAAGC,IAAMA,EAAI,IAClDC,SAAU,CACR,CACEC,MAAO,yCACPC,gBAAiB,UACjBR,KAAMjC,MAMlB,IAAI0C,EAAIC,SAASC,eAAe,aAElB,IAAIC,MAAMH,EAAGX,GAI/Be,OAAOC,OAAM,KACT,IAAIC,WAzEe/B,GACtB,MAAMgC,EAAUvB,aAAawB,QAAQjC,GAErC,IAAKgC,EACJ,OAAO,KAER,MAAM3B,EAAOV,KAAKC,MAAMoC,GAClBE,EAAM,IAAI3B,KAEb,IACI,GAAI2B,EAAI1B,UAAYH,EAAKC,OAGrB,OADAG,aAAa0B,WAAWnC,GACjB,KAEb,MAAOR,GAEL,OADAiB,aAAa0B,WAAWnC,GACjB,KAEd,OAAOK,EAAKJ,MAsDDmC,CAAc,kBAClBL,GACAhD,EAAiBY,KAAKC,MAAMmC,GAC5BlB,KAEA3B,MA5GDJ,oBAAAA,kBAAiB","sources":["Documents/vscode/TargetMultipliers/src/index.ts"],"sourcesContent":["/// <reference path=\"chart.d.ts\" />\r\nmodule targetMultipliers {\r\n\r\n    const MaxTM= 57;\r\nvar tmDistribution= new Array<number>(MaxTM).fill(0);\r\n\r\ninterface IMasternode {\r\n        \"ownerAuthAddress\":string,\r\n\t\t\"operatorAuthAddress\": string,\r\n\t\t\"rewardAddress\": string,\r\n\t\t\"creationHeight\": number,\r\n\t\t\"resignHeight\": number,\r\n\t\t\"resignTx\": string,\r\n\t\t\"banTx\": string,\r\n\t\t\"state\": string,\r\n\t\t\"mintedBlocks\": number,\r\n\t\t\"ownerIsMine\": boolean,\r\n\t\t\"operatorIsMine\": boolean,\r\n\t\t\"localMasternode\": boolean,\r\n\t\t\"targetMultipliers\": number[],\r\n\t\t\"timelock\": string\r\n}\r\n\r\nfunction setWithExpiry(key, value, ttl=3600000) {\r\n\tconst item = {\r\n\t\tvalue: value,\r\n\t\texpiry: (new Date()).getTime() + ttl, //ttl in in ms\r\n\t}\r\n\tlocalStorage.setItem(key, JSON.stringify(item))\r\n}\r\n\r\nfunction getWithExpiry(key) {\r\n\tconst itemStr = localStorage.getItem(key)\r\n\t// if the item doesn't exist, return null\r\n\tif (!itemStr) {\r\n\t\treturn null\r\n\t}\r\n\tconst item = JSON.parse(itemStr)\r\n\tconst now = new Date()\r\n\t// compare the expiry time of the item with the current time\r\n    try {\r\n        if (now.getTime() > item.expiry) {\r\n            // If the item is expired, delete the item from storage and return null\r\n            localStorage.removeItem(key)\r\n            return null\r\n        }            \r\n    } catch (error) {\r\n        localStorage.removeItem(key)\r\n        return null    \r\n    }\r\n\treturn item.value\r\n}\r\n\r\nfunction getTargetMultipliers() {\r\n    var result: number[];\r\n    fetch('https://api.mydeficha.in/v1/listmasternodes/?state=ENABLED')\r\n    .then(function(response){\r\n        if (!response.ok) {\r\n            console.error('HTTP error! status: ${response.status}');\r\n        }\r\n        return response.text();\r\n    })\r\n    .then(function(response) {\r\n        var masternodes=JSON.parse(response); \r\n         Object.entries<IMasternode>(masternodes).forEach(\r\n            ([key, value]) => {\r\n                value.targetMultipliers.forEach(index => {\r\n                    index -=1;\r\n                    if (index < 0)\r\n                        index = 0;\r\n                    else if (index > MaxTM-1)\r\n                        index = MaxTM-1;    \r\n                    tmDistribution[index]++;\r\n                    });                    \r\n            }\r\n        );\r\n        setWithExpiry(\"tmDistribution\",JSON.stringify(tmDistribution));\r\n        setchart()   \r\n    });\r\n    return result;\r\n}\r\n\r\nfunction setchart(){\r\n    const config = {\r\n        type: 'bar',\r\n        data: {\r\n            labels: Array.from({length: MaxTM}, (_, i) => i + 1),\r\n            datasets: [\r\n              {\r\n                label: \"Distribution of the target multipliers\",\r\n                backgroundColor: '#ff8000' , \r\n                data: tmDistribution\r\n              }\r\n            ]\r\n          },\r\n      };\r\n\r\n    let e = document.getElementById('bar-chart');\r\n    //@ts-ignore\r\n    var myChart = new Chart(e, config );\r\n}\r\n\r\n\r\nwindow.onload = () => {\r\n    var s = getWithExpiry('tmDistribution');\r\n    if (s) {\r\n        tmDistribution = JSON.parse(s);\r\n        setchart();\r\n    } else {\r\n        getTargetMultipliers();\r\n    }\r\n};\r\n\r\n}"],"names":["targetMultipliers","tmDistribution","Array","fill","getTargetMultipliers","fetch","then","response","ok","console","error","text","masternodes","JSON","parse","Object","entries","forEach","key","value","index","MaxTM","ttl","item","expiry","Date","getTime","localStorage","setItem","stringify","setWithExpiry","setchart","config","type","data","labels","from","length","_","i","datasets","label","backgroundColor","e","document","getElementById","Chart","window","onload","s","itemStr","getItem","now","removeItem","getWithExpiry"],"version":3,"file":"index.b2a48162.js.map"}